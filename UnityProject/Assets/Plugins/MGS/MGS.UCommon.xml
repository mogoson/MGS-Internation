<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MGS.UCommon</name>
    </assembly>
    <members>
        <member name="T:MGS.UCommon.UAnimation.MonoAnimation">
            <summary>
            Mono animation.
            </summary>
        </member>
        <member name="F:MGS.UCommon.UAnimation.MonoAnimation.speed">
            <summary>
            Speed of animation.
            </summary>
        </member>
        <member name="F:MGS.UCommon.UAnimation.MonoAnimation.loop">
            <summary>
            Loop mode of animation.
            </summary>
        </member>
        <member name="P:MGS.UCommon.UAnimation.MonoAnimation.Speed">
            <summary>
            Speed of animation.
            </summary>
        </member>
        <member name="P:MGS.UCommon.UAnimation.MonoAnimation.LoopMode">
            <summary>
            Loop mode of animation.
            </summary>
        </member>
        <member name="P:MGS.UCommon.UAnimation.MonoAnimation.IsPlaying">
            <summary>
            Animation is playing?
            </summary>
        </member>
        <member name="M:MGS.UCommon.UAnimation.MonoAnimation.Awake">
            <summary>
            Awake animation.
            </summary>
        </member>
        <member name="M:MGS.UCommon.UAnimation.MonoAnimation.Initialize">
            <summary>
            Initialize animation.
            </summary>
        </member>
        <member name="M:MGS.UCommon.UAnimation.MonoAnimation.Play(System.Object)">
            <summary>
            Play animation.
            </summary>
            <param name="data">Animation data.</param>
        </member>
        <member name="M:MGS.UCommon.UAnimation.MonoAnimation.Refresh(System.Object)">
            <summary>
            Refresh animation.
            </summary>
            <param name="data">Animation data.</param>
        </member>
        <member name="M:MGS.UCommon.UAnimation.MonoAnimation.Pause">
            <summary>
            Pause animation.
            </summary>
        </member>
        <member name="M:MGS.UCommon.UAnimation.MonoAnimation.Rewind(System.Single)">
            <summary>
            Rewind animation.
            </summary>
            <param name="progress">Progress of animation in the range[0~1]</param>
        </member>
        <member name="M:MGS.UCommon.UAnimation.MonoAnimation.Stop">
            <summary>
            Stop animation.
            </summary>
        </member>
        <member name="T:MGS.UCommon.UAnimation.IAnimation">
            <summary>
            Interface of animation.
            </summary>
        </member>
        <member name="P:MGS.UCommon.UAnimation.IAnimation.Speed">
            <summary>
            Speed of animation.
            </summary>
        </member>
        <member name="P:MGS.UCommon.UAnimation.IAnimation.LoopMode">
            <summary>
            Loop mode of animation.
            </summary>
        </member>
        <member name="P:MGS.UCommon.UAnimation.IAnimation.IsPlaying">
            <summary>
            Animation is playing?
            </summary>
        </member>
        <member name="M:MGS.UCommon.UAnimation.IAnimation.Play(System.Object)">
            <summary>
            Play animation.
            </summary>
            <param name="data">Animation data.</param>
        </member>
        <member name="M:MGS.UCommon.UAnimation.IAnimation.Refresh(System.Object)">
            <summary>
            Refresh animation.
            </summary>
            <param name="data">Animation data.</param>
        </member>
        <member name="M:MGS.UCommon.UAnimation.IAnimation.Pause">
            <summary>
            Pause animation.
            </summary>
        </member>
        <member name="M:MGS.UCommon.UAnimation.IAnimation.Rewind(System.Single)">
            <summary>
            Rewind animation.
            </summary>
            <param name="progress">Progress of animation in the range[0~1]</param>
        </member>
        <member name="M:MGS.UCommon.UAnimation.IAnimation.Stop">
            <summary>
            Stop animation.
            </summary>
        </member>
        <member name="T:MGS.UCommon.UAnimation.LoopMode">
            <summary>
            Loop mode of animation.
            </summary>
        </member>
        <member name="F:MGS.UCommon.UAnimation.LoopMode.Once">
            <summary>
            Animation just play once.
            </summary>
        </member>
        <member name="F:MGS.UCommon.UAnimation.LoopMode.Loop">
            <summary>
            Animation loop play.
            </summary>
        </member>
        <member name="F:MGS.UCommon.UAnimation.LoopMode.PingPong">
            <summary>
            Animation play like ping pong.
            </summary>
        </member>
        <member name="T:MGS.UCommon.Generic.GenericEvent">
            <summary>
            Generic event.
            </summary>
        </member>
        <member name="F:MGS.UCommon.Generic.GenericEvent.callback">
            <summary>
            Event callback.
            </summary>
        </member>
        <member name="M:MGS.UCommon.Generic.GenericEvent.AddListener(System.Action)">
            <summary>
            Add event listener.
            </summary>
            <param name="callback">Event callback.</param>
        </member>
        <member name="M:MGS.UCommon.Generic.GenericEvent.RemoveListener(System.Action)">
            <summary>
            Remove event listener.
            </summary>
            <param name="callback">Event callback.</param>
        </member>
        <member name="M:MGS.UCommon.Generic.GenericEvent.ClearListener">
            <summary>
            Clear event listener.
            </summary>
        </member>
        <member name="M:MGS.UCommon.Generic.GenericEvent.Invoke">
            <summary>
            Invoke event.
            </summary>
        </member>
        <member name="T:MGS.UCommon.Generic.GenericEvent`1">
            <summary>
            Generic event.
            </summary>
            <typeparam name="T">Specified type of event data.</typeparam>
        </member>
        <member name="F:MGS.UCommon.Generic.GenericEvent`1.callback">
            <summary>
            Event callback.
            </summary>
        </member>
        <member name="M:MGS.UCommon.Generic.GenericEvent`1.AddListener(System.Action{`0})">
            <summary>
            Add event listener.
            </summary>
            <param name="callback">Event callback.</param>
        </member>
        <member name="M:MGS.UCommon.Generic.GenericEvent`1.RemoveListener(System.Action{`0})">
            <summary>
            Remove event listener.
            </summary>
            <param name="callback">Event callback.</param>
        </member>
        <member name="M:MGS.UCommon.Generic.GenericEvent`1.ClearListener">
            <summary>
            Clear event listener.
            </summary>
        </member>
        <member name="M:MGS.UCommon.Generic.GenericEvent`1.Invoke(`0)">
            <summary>
            Invoke event.
            </summary>
            <param name="data">Data of event.</param>
        </member>
        <member name="T:MGS.UCommon.Generic.MirrorMode">
            <summary>
            Mode of mirror.
            </summary>
        </member>
        <member name="F:MGS.UCommon.Generic.MirrorMode.Horizontal">
            <summary>
            Horizontal mirror.
            </summary>
        </member>
        <member name="F:MGS.UCommon.Generic.MirrorMode.Vertical">
            <summary>
            Vertical mirror.
            </summary>
        </member>
        <member name="F:MGS.UCommon.Generic.MirrorMode.Both">
            <summary>
            Both horizontal and vertical mirror.
            </summary>
        </member>
        <member name="T:MGS.UCommon.Generic.Range">
            <summary>
            Range form min to max.
            </summary>
        </member>
        <member name="F:MGS.UCommon.Generic.Range.min">
            <summary>
            Min value of range.
            </summary>
        </member>
        <member name="F:MGS.UCommon.Generic.Range.max">
            <summary>
            Max value of range.
            </summary>
        </member>
        <member name="P:MGS.UCommon.Generic.Range.Length">
            <summary>
            Length of range from min to max.
            </summary>
        </member>
        <member name="M:MGS.UCommon.Generic.Range.#ctor(System.Single,System.Single)">
            <summary>
            Constructor.
            </summary>
            <param name="min">Min value of range.</param>
            <param name="max">Max value of range.</param>
        </member>
        <member name="T:MGS.UCommon.Generic.PlaneArea">
            <summary>
            Rectangle area on plane.
            </summary>
        </member>
        <member name="F:MGS.UCommon.Generic.PlaneArea.center">
            <summary>
            Center of area.
            </summary>
        </member>
        <member name="F:MGS.UCommon.Generic.PlaneArea.width">
            <summary>
            Width of area.
            </summary>
        </member>
        <member name="F:MGS.UCommon.Generic.PlaneArea.length">
            <summary>
            Length of area.
            </summary>
        </member>
        <member name="M:MGS.UCommon.Generic.PlaneArea.#ctor(UnityEngine.Transform,System.Single,System.Single)">
            <summary>
            Constructor.
            </summary>
            <param name="center">Center of area.</param>
            <param name="width">Width of area.</param>
            <param name="length">Length of area.</param>
        </member>
        <member name="T:MGS.UCommon.UI.MonoUI">
            <summary>
            Base class for mono UI.
            </summary>
        </member>
        <member name="P:MGS.UCommon.UI.MonoUI.IsOpen">
            <summary>
            UI is open?
            </summary>
        </member>
        <member name="P:MGS.UCommon.UI.MonoUI.IsDisposed">
            <summary>
            UI is disposed?
            </summary>
        </member>
        <member name="P:MGS.UCommon.UI.MonoUI.OnOpen">
            <summary>
            Event on open UI.
            </summary>
        </member>
        <member name="P:MGS.UCommon.UI.MonoUI.OnClose">
            <summary>
            Event on close UI.
            </summary>
        </member>
        <member name="M:MGS.UCommon.UI.MonoUI.Awake">
            <summary>
            Awake UI.
            </summary>
        </member>
        <member name="M:MGS.UCommon.UI.MonoUI.Initialize">
            <summary>
            Initialize UI.
            </summary>
        </member>
        <member name="M:MGS.UCommon.UI.MonoUI.Open(System.Object)">
            <summary>
            Open UI.
            </summary>
            <param name="data">Data for UI.</param>
        </member>
        <member name="M:MGS.UCommon.UI.MonoUI.Refresh(System.Object)">
            <summary>
            Refresh UI.
            </summary>
            <param name="data">Data for UI.</param>
        </member>
        <member name="M:MGS.UCommon.UI.MonoUI.Close(System.Boolean)">
            <summary>
            Close UI.
            </summary>
            <param name="dispose">Dispose UI on close?</param>
        </member>
        <member name="T:MGS.UCommon.UI.UIElement">
            <summary>
            Base class for UI element.
            </summary>
        </member>
        <member name="M:MGS.UCommon.UI.UIElement.Mirror(MGS.UCommon.Generic.MirrorMode)">
            <summary>
            Mirror UI.
            </summary>
            <param name="mode">Mode of mirror.</param>
        </member>
        <member name="M:MGS.UCommon.UI.UIElement.Language(System.String)">
            <summary>
            Set language of UI.
            </summary>
            <param name="name">Language name.</param>
        </member>
        <member name="T:MGS.UCommon.UI.IMonoUI">
            <summary>
            Interface for mono UI.
            </summary>
        </member>
        <member name="P:MGS.UCommon.UI.IMonoUI.IsOpen">
            <summary>
            UI is open?
            </summary>
        </member>
        <member name="P:MGS.UCommon.UI.IMonoUI.IsDisposed">
            <summary>
            UI is disposed?
            </summary>
        </member>
        <member name="P:MGS.UCommon.UI.IMonoUI.OnOpen">
            <summary>
            Event on open UI.
            </summary>
        </member>
        <member name="P:MGS.UCommon.UI.IMonoUI.OnClose">
            <summary>
            Event on close UI.
            </summary>
        </member>
        <member name="M:MGS.UCommon.UI.IMonoUI.Open(System.Object)">
            <summary>
            Open UI.
            </summary>
            <param name="data">Data for UI.</param>
        </member>
        <member name="M:MGS.UCommon.UI.IMonoUI.Refresh(System.Object)">
            <summary>
            Refresh UI.
            </summary>
            <param name="data">Data for UI.</param>
        </member>
        <member name="M:MGS.UCommon.UI.IMonoUI.Close(System.Boolean)">
            <summary>
            Close UI.
            </summary>
            <param name="dispose">Dispose UI on close?</param>
        </member>
        <member name="T:MGS.UCommon.UI.IMirrorableUI">
            <summary>
            Interface for mirrorable UI.
            </summary>
        </member>
        <member name="M:MGS.UCommon.UI.IMirrorableUI.Mirror(MGS.UCommon.Generic.MirrorMode)">
            <summary>
            Mirror UI.
            </summary>
            <param name="mode">Mode of mirror.</param>
        </member>
        <member name="T:MGS.UCommon.UI.IMultilingualUI">
            <summary>
            Interface for multilingual UI.
            </summary>
        </member>
        <member name="M:MGS.UCommon.UI.IMultilingualUI.Language(System.String)">
            <summary>
            Set language of UI.
            </summary>
            <param name="name">Language name.</param>
        </member>
        <member name="T:MGS.UCommon.UI.IUIElement">
            <summary>
            Interface for UI element.
            </summary>
        </member>
        <member name="T:MGS.UCommon.Extension.GameObjectExtention">
            <summary>
            Extention for UnityEngine.GameObject.
            </summary>
        </member>
        <member name="M:MGS.UCommon.Extension.GameObjectExtention.BroadcastLayer(UnityEngine.GameObject,System.Int32)">
            <summary>
            Set layer include it's children.
            </summary>
        </member>
        <member name="T:MGS.UCommon.Extension.TerrainExtension">
            <summary>
            Extension for UnityEngine.Terrain.
            </summary>
        </member>
        <member name="M:MGS.UCommon.Extension.TerrainExtension.NormalizeRelativePosition(UnityEngine.Terrain,UnityEngine.Vector3)">
            <summary>
            Normalize position relative to terrain.
            </summary>
            <param name="terrain">Base terrain.</param>
            <param name="woldPos">Position in wold space.</param>
            <returns>Normalize position.</returns>
        </member>
        <member name="M:MGS.UCommon.Extension.TerrainExtension.MapRelativePosition(UnityEngine.Terrain,UnityEngine.Vector3,UnityEngine.Vector3)">
            <summary>
            Position relative to terrain map.
            </summary>
            <param name="terrain">Base terrain.</param>
            <param name="mapSize">Map size(x is width, z is height).</param>
            <param name="normalizePos">Normalize position relative to terrain.</param>
            <returns>Relative position.</returns>
        </member>
        <member name="T:MGS.UCommon.Extension.TextureExtention">
            <summary>
            Extention for UnityEngine.Texture2D.
            </summary>
        </member>
        <member name="M:MGS.UCommon.Extension.TextureExtention.UpdatePixels(UnityEngine.Texture2D,UnityEngine.Color[],System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Update the pixels of Texture2D.
            </summary>
            <param name="texture2D">Base Texture2D.</param>
            <param name="colorArray">Color array for pixels.</param>
            <param name="mipLevel">The mip level of the texture to write to.</param>
            <param name="updateMipmaps">When set to true, mipmap levels are recalculated.</param>
            <param name="makeNointerReadable">When set to true, system memory copy of a texture is released.</param>
        </member>
        <member name="M:MGS.UCommon.Extension.TextureExtention.UpdatePixels(UnityEngine.Texture2D,UnityEngine.Color[0:,0:],System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Update the pixels of Texture2D.
            </summary>
            <param name="texture2D">Base Texture2D.</param>
            <param name="colorArray">Color array for pixels.</param>
            <param name="mipLevel">The mip level of the texture to write to.</param>
            <param name="updateMipmaps">When set to true, mipmap levels are recalculated.</param>
            <param name="makeNointerReadable">When set to true, system memory copy of a texture is released.</param>
        </member>
        <member name="M:MGS.UCommon.Extension.TextureExtention.UpdatePixels(UnityEngine.Texture2D,UnityEngine.Color32[],System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Update the pixels of Texture2D.
            </summary>
            <param name="texture2D">Base Texture2D.</param>
            <param name="colorArray">Color array for pixels.</param>
            <param name="mipLevel">The mip level of the texture to write to.</param>
            <param name="updateMipmaps">When set to true, mipmap levels are recalculated.</param>
            <param name="makeNointerReadable">When set to true, system memory copy of a texture is released.</param>
        </member>
        <member name="M:MGS.UCommon.Extension.TextureExtention.UpdatePixels(UnityEngine.Texture2D,UnityEngine.Color32[0:,0:],System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Update the pixels of Texture2D.
            </summary>
            <param name="texture2D">Base Texture2D.</param>
            <param name="colorArray">Color array for pixels.</param>
            <param name="mipLevel">The mip level of the texture to write to.</param>
            <param name="updateMipmaps">When set to true, mipmap levels are recalculated.</param>
            <param name="makeNointerReadable">When set to true, system memory copy of a texture is released.</param>
        </member>
        <member name="T:MGS.UCommon.Curve.LinearBezierAnchor">
            <summary>
            Anchor points of linear bezier curve.
            </summary>
        </member>
        <member name="F:MGS.UCommon.Curve.LinearBezierAnchor.start">
            <summary>
            Start point of curve.
            </summary>
        </member>
        <member name="F:MGS.UCommon.Curve.LinearBezierAnchor.end">
            <summary>
            End point of curve.
            </summary>
        </member>
        <member name="M:MGS.UCommon.Curve.LinearBezierAnchor.#ctor(UnityEngine.Vector3,UnityEngine.Vector3)">
            <summary>
            Constructor.
            </summary>
            <param name="start">Start point of curve.</param>
            <param name="end">End point of curve.</param>
        </member>
        <member name="T:MGS.UCommon.Curve.QuadraticBezierAnchor">
            <summary>
            Anchor points of quadratic bezier curve.
            </summary>
        </member>
        <member name="F:MGS.UCommon.Curve.QuadraticBezierAnchor.start">
            <summary>
            Start point of curve.
            </summary>
        </member>
        <member name="F:MGS.UCommon.Curve.QuadraticBezierAnchor.end">
            <summary>
            End point of curve.
            </summary>
        </member>
        <member name="F:MGS.UCommon.Curve.QuadraticBezierAnchor.tangent">
            <summary>
            Tangent point of curve.
            </summary>
        </member>
        <member name="M:MGS.UCommon.Curve.QuadraticBezierAnchor.#ctor(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3)">
            <summary>
            Constructor.
            </summary>
            <param name="start">Start point of curve.</param>
            <param name="end">End point of curve.</param>
            <param name="tangent">Tangent point of curve.</param>
        </member>
        <member name="T:MGS.UCommon.Curve.CubicBezierAnchor">
            <summary>
            Anchor points of cubic bezier curve.
            </summary>
        </member>
        <member name="F:MGS.UCommon.Curve.CubicBezierAnchor.start">
            <summary>
            Start point of curve.
            </summary>
        </member>
        <member name="F:MGS.UCommon.Curve.CubicBezierAnchor.end">
            <summary>
            End point of curve.
            </summary>
        </member>
        <member name="F:MGS.UCommon.Curve.CubicBezierAnchor.startTangent">
            <summary>
            Start tangent point of curve.
            </summary>
        </member>
        <member name="F:MGS.UCommon.Curve.CubicBezierAnchor.endTangent">
            <summary>
            End tangent point of curve.
            </summary>
        </member>
        <member name="M:MGS.UCommon.Curve.CubicBezierAnchor.#ctor(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3)">
            <summary>
            Constructor.
            </summary>
            <param name="start">Start point of curve.</param>
            <param name="end">End point of curve.</param>
            <param name="startTangent">Start tangent point of curve.</param>
            <param name="endTangent">End tangent point of curve.</param>
        </member>
        <member name="T:MGS.UCommon.Curve.BezierCurve">
            <summary>
            Bezier curve.
            </summary>
        </member>
        <member name="F:MGS.UCommon.Curve.BezierCurve.Delta">
            <summary>
            Delta to lerp key.
            </summary>
        </member>
        <member name="P:MGS.UCommon.Curve.BezierCurve.Length">
            <summary>
            Length of curve.
            </summary>
        </member>
        <member name="P:MGS.UCommon.Curve.BezierCurve.MaxKey">
            <summary>
            Max key of curve.
            </summary>
        </member>
        <member name="M:MGS.UCommon.Curve.BezierCurve.GetPointAt(System.Single)">
            <summary>
            Get point on curve at key.
            </summary>
            <param name="key">Key is in the range(0~1).</param>
            <returns>The point on curve at key.</returns>
        </member>
        <member name="T:MGS.UCommon.Curve.LinearBezierCurve">
            <summary>
            Linear bezier curve.
            </summary>
        </member>
        <member name="F:MGS.UCommon.Curve.LinearBezierCurve.anchor">
            <summary>
            Anchor points of curve.
            </summary>
        </member>
        <member name="M:MGS.UCommon.Curve.LinearBezierCurve.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:MGS.UCommon.Curve.LinearBezierCurve.#ctor(MGS.UCommon.Curve.LinearBezierAnchor)">
            <summary>
            Constructor.
            </summary>
            <param name="anchor">Anchor points of curve.</param>
        </member>
        <member name="M:MGS.UCommon.Curve.LinearBezierCurve.GetPointAt(System.Single)">
            <summary>
            Get point on curve at key.
            </summary>
            <param name="key">Key is in the range(0~1).</param>
            <returns>The point on curve at key.</returns>
        </member>
        <member name="M:MGS.UCommon.Curve.LinearBezierCurve.GetPointAt(MGS.UCommon.Curve.LinearBezierAnchor,System.Single)">
            <summary>
            Get curve point base on anchor points and key.
            </summary>
            <param name="anchor">Anchor points of curve.</param>
            <param name="key">Key is in the range(0~1).</param>
            <returns>Point on curve.</returns>
        </member>
        <member name="T:MGS.UCommon.Curve.QuadraticBezierCurve">
            <summary>
            Quadratic bezier curve.
            </summary>
        </member>
        <member name="F:MGS.UCommon.Curve.QuadraticBezierCurve.anchor">
            <summary>
            Anchor points of curve.
            </summary>
        </member>
        <member name="M:MGS.UCommon.Curve.QuadraticBezierCurve.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:MGS.UCommon.Curve.QuadraticBezierCurve.#ctor(MGS.UCommon.Curve.QuadraticBezierAnchor)">
            <summary>
            Constructor.
            </summary>
            <param name="anchor">Anchor points of curve.</param>
        </member>
        <member name="M:MGS.UCommon.Curve.QuadraticBezierCurve.GetPointAt(System.Single)">
            <summary>
            Get point on curve at key.
            </summary>
            <param name="key">Key is in the range(0~1).</param>
            <returns>The point on curve at key.</returns>
        </member>
        <member name="M:MGS.UCommon.Curve.QuadraticBezierCurve.GetPointAt(MGS.UCommon.Curve.QuadraticBezierAnchor,System.Single)">
            <summary>
            Get curve point base on anchor points and t.
            </summary>
            <param name="anchor">Anchor points of curve.</param>
            <param name="t">t is in the range(0~1).</param>
            <returns>Point on curve.</returns>
        </member>
        <member name="T:MGS.UCommon.Curve.CubicBezierCurve">
            <summary>
            Cubic bezier curve.
            </summary>
        </member>
        <member name="F:MGS.UCommon.Curve.CubicBezierCurve.anchor">
            <summary>
            Anchor points of curve.
            </summary>
        </member>
        <member name="M:MGS.UCommon.Curve.CubicBezierCurve.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:MGS.UCommon.Curve.CubicBezierCurve.#ctor(MGS.UCommon.Curve.CubicBezierAnchor)">
            <summary>
            Constructor.
            </summary>
            <param name="anchor">Anchor points of curve.</param>
        </member>
        <member name="M:MGS.UCommon.Curve.CubicBezierCurve.GetPointAt(System.Single)">
            <summary>
            Get point on curve at key.
            </summary>
            <param name="key">Key is in the range(0~1).</param>
            <returns>The point on curve at key.</returns>
        </member>
        <member name="M:MGS.UCommon.Curve.CubicBezierCurve.GetPointAt(MGS.UCommon.Curve.CubicBezierAnchor,System.Single)">
            <summary>
            Get curve point base on anchor points and key.
            </summary>
            <param name="anchor">Anchor points of curve.</param>
            <param name="key">Key is in the range(0~1).</param>
            <returns>Point on curve.</returns>
        </member>
        <member name="T:MGS.UCommon.Curve.EllipseArgs">
            <summary>
            Args of ellipse.
            </summary>
        </member>
        <member name="F:MGS.UCommon.Curve.EllipseArgs.center">
            <summary>
            Center of ellipse.
            </summary>
        </member>
        <member name="F:MGS.UCommon.Curve.EllipseArgs.semiMinorAxis">
            <summary>
            Semi minor axis of ellipse.
            </summary>
        </member>
        <member name="F:MGS.UCommon.Curve.EllipseArgs.semiMajorAxis">
            <summary>
            Semi major axis of ellipse.
            </summary>
        </member>
        <member name="M:MGS.UCommon.Curve.EllipseArgs.#ctor(UnityEngine.Vector3,System.Single,System.Single)">
            <summary>
            Constructor.
            </summary>
            <param name="center">Center of ellipse.</param>
            <param name="semiMinorAxis">Semi minor axis of ellipse.</param>
            <param name="semiMajorAxis">Semi major axis of ellipse.</param>
        </member>
        <member name="T:MGS.UCommon.Curve.EllipseCurve">
            <summary>
            Ellipse curve.
            </summary>
        </member>
        <member name="F:MGS.UCommon.Curve.EllipseCurve.args">
            <summary>
            Args of ellipse curve.
            </summary>
        </member>
        <member name="P:MGS.UCommon.Curve.EllipseCurve.Length">
            <summary>
            Length of curve.
            </summary>
        </member>
        <member name="P:MGS.UCommon.Curve.EllipseCurve.MaxKey">
            <summary>
            Max around radian of ellipse.
            </summary>
        </member>
        <member name="M:MGS.UCommon.Curve.EllipseCurve.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:MGS.UCommon.Curve.EllipseCurve.#ctor(MGS.UCommon.Curve.EllipseArgs)">
            <summary>
            Constructor.
            </summary>
            <param name="args">Args of ellipse curve.</param>
        </member>
        <member name="M:MGS.UCommon.Curve.EllipseCurve.GetPointAt(System.Single)">
            <summary>
            Get point on ellipse at around radian.
            </summary>
            <param name="radian">Around radian of ellipse.</param>
            <returns>The point on ellipse at around radian.</returns>
        </member>
        <member name="M:MGS.UCommon.Curve.EllipseCurve.GetPointAt(MGS.UCommon.Curve.EllipseArgs,System.Single)">
            <summary>
            Get point on ellipse at around radian.
            </summary>
            <param name="args">Args of ellipse curve.</param>
            <param name="radian">Around radian of ellipse.</param>
            <returns>The point on ellipse at around radian.</returns>
        </member>
        <member name="T:MGS.UCommon.Curve.HelixCurve">
            <summary>
            Helix curve.
            </summary>
        </member>
        <member name="F:MGS.UCommon.Curve.HelixCurve.Coefficient">
            <summary>
            Coefficient of delta to lerp key.
            </summary>
        </member>
        <member name="F:MGS.UCommon.Curve.HelixCurve.topEllipse">
            <summary>
            Top ellipse args of curve.
            </summary>
        </member>
        <member name="F:MGS.UCommon.Curve.HelixCurve.bottomEllipse">
            <summary>
            Bottom ellipse args of curve.
            </summary>
        </member>
        <member name="P:MGS.UCommon.Curve.HelixCurve.Length">
            <summary>
            Length of curve.
            </summary>
        </member>
        <member name="P:MGS.UCommon.Curve.HelixCurve.MaxKey">
            <summary>
            Max around radian of helix.
            </summary>
        </member>
        <member name="M:MGS.UCommon.Curve.HelixCurve.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:MGS.UCommon.Curve.HelixCurve.#ctor(MGS.UCommon.Curve.EllipseArgs,MGS.UCommon.Curve.EllipseArgs)">
            <summary>
            Constructor.
            </summary>
            <param name="topEllipse">Top ellipse args of curve.</param>
            <param name="bottomEllipse">Bottom ellipse args of curve.</param>
        </member>
        <member name="M:MGS.UCommon.Curve.HelixCurve.GetPointAt(System.Single)">
            <summary>
            Get point on helix at around radian.
            </summary>
            <param name="radian">Around radian of helix.</param>
            <returns>The point on helix at around radian.</returns>
        </member>
        <member name="M:MGS.UCommon.Curve.HelixCurve.GetPointAt(MGS.UCommon.Curve.EllipseArgs,MGS.UCommon.Curve.EllipseArgs,System.Single,System.Single)">
            <summary>
            Get point on helix at around radian.
            </summary>
            <param name="topEllipse">Top ellipse args of curve.</param>
            <param name="bottomEllipse">Bottom ellipse args of curve.</param>
            <param name="maxRadian">Max around radian of helix.</param>
            <param name="radian">Around radian of helix.</param>
            <returns>The point on helix at around radian.</returns>
        </member>
        <member name="T:MGS.UCommon.Curve.VectorKeyFrame">
            <summary>
            Vector keyframe.
            </summary>
        </member>
        <member name="F:MGS.UCommon.Curve.VectorKeyFrame.key">
            <summary>
            Key of keyframe.
            </summary>
        </member>
        <member name="F:MGS.UCommon.Curve.VectorKeyFrame.value">
            <summary>
            Value of keyframe.
            </summary>
        </member>
        <member name="M:MGS.UCommon.Curve.VectorKeyFrame.#ctor(System.Single,UnityEngine.Vector3)">
            <summary>
            Constructor.
            </summary>
            <param name="key">Key of keyframe.</param>
            <param name="value">Value of keyframe.</param>
        </member>
        <member name="T:MGS.UCommon.Curve.HermiteCurve">
            <summary>
            Hermite curve in three dimensional space.
            </summary>
        </member>
        <member name="P:MGS.UCommon.Curve.HermiteCurve.Item(System.Int32)">
            <summary>
            Get the index key frame.
            </summary>
            <param name="index">Index of key frame.</param>
            <returns>Key frame at index.</returns>
        </member>
        <member name="F:MGS.UCommon.Curve.HermiteCurve.Coefficient">
            <summary>
            Coefficient of delta to lerp key.
            </summary>
        </member>
        <member name="P:MGS.UCommon.Curve.HermiteCurve.KeyframeCount">
            <summary>
            Count of Keyframes.
            </summary>
        </member>
        <member name="P:MGS.UCommon.Curve.HermiteCurve.Length">
            <summary>
            Length of curve.
            </summary>
        </member>
        <member name="P:MGS.UCommon.Curve.HermiteCurve.MaxKey">
            <summary>
            Max key of curve.
            </summary>
        </member>
        <member name="P:MGS.UCommon.Curve.HermiteCurve.PostWrapMode">
            <summary>
            The behaviour of the animation after the last keyframe.
            </summary>
        </member>
        <member name="P:MGS.UCommon.Curve.HermiteCurve.PreWrapMode">
            <summary>
            The behaviour of the animation before the first keyframe.
            </summary>
        </member>
        <member name="F:MGS.UCommon.Curve.HermiteCurve.xCurve">
            <summary>
            Curve for x.
            </summary>
        </member>
        <member name="F:MGS.UCommon.Curve.HermiteCurve.yCurve">
            <summary>
            Curve for y.
            </summary>
        </member>
        <member name="F:MGS.UCommon.Curve.HermiteCurve.zCurve">
            <summary>
            Curve for z.
            </summary>
        </member>
        <member name="M:MGS.UCommon.Curve.HermiteCurve.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:MGS.UCommon.Curve.HermiteCurve.AddKeyframe(MGS.UCommon.Curve.VectorKeyFrame)">
            <summary>
            Add a new keyframe to the curve.
            </summary>
            <param name="keyframe">The keyframe to add to the curve.</param>
            <returns>The index of the added keyframe, or -1 if the keyframe could not be added.</returns>
        </member>
        <member name="M:MGS.UCommon.Curve.HermiteCurve.AddKeyframe(System.Single,UnityEngine.Vector3)">
            <summary>
            Add a new keyframe to the curve.
            </summary>
            <param name="key">The key of the keyframe.</param>
            <param name="value">The value of the keyframe.</param>
            <returns>The index of the added keyframe, or -1 if the keyframe could not be added.</returns>
        </member>
        <member name="M:MGS.UCommon.Curve.HermiteCurve.RemoveKeyframe(System.Int32)">
            <summary>
            Removes a keyframe.
            </summary>
            <param name="index">The index of the keyframe to remove.</param>
        </member>
        <member name="M:MGS.UCommon.Curve.HermiteCurve.SmoothTangents(System.Int32,System.Single)">
            <summary>
            Smooth the in and out tangents of the keyframe at index.
            </summary>
            <param name="index">The index of the keyframe.</param>
            <param name="weight">The smoothing weight to apply to the keyframe's tangents.</param>
        </member>
        <member name="M:MGS.UCommon.Curve.HermiteCurve.SmoothTangents(System.Single)">
            <summary>
            Smooth the in and out tangents of keyframes.
            </summary>
            <param name="weight">The smoothing weight to apply to the keyframe's tangents.</param>
        </member>
        <member name="M:MGS.UCommon.Curve.HermiteCurve.GetPointAt(System.Single)">
            <summary>
            Get point by evaluate the curve at key.
            </summary>
            <param name="key">The key within the curve you want to evaluate.</param>
            <returns>The point on the curve at the key.</returns>
        </member>
        <member name="M:MGS.UCommon.Curve.HermiteCurve.FromAnchors(UnityEngine.Vector3[],System.Boolean)">
            <summary>
            Create a curve base on anchors.
            </summary>
            <param name="anchors">Anchor points of curve.</param>
            <param name="close">Curve is close?</param>
            <returns>New curve.</returns>
        </member>
        <member name="T:MGS.UCommon.Curve.SinArgs">
            <summary>
            Args of sin.
            </summary>
        </member>
        <member name="F:MGS.UCommon.Curve.SinArgs.amplitude">
            <summary>
            Amplitude of sin.
            </summary>
        </member>
        <member name="F:MGS.UCommon.Curve.SinArgs.angular">
            <summary>
            Angular of sin.
            </summary>
        </member>
        <member name="F:MGS.UCommon.Curve.SinArgs.phase">
            <summary>
            Initial phase of sin.
            </summary>
        </member>
        <member name="F:MGS.UCommon.Curve.SinArgs.setover">
            <summary>
            Setover of sin.
            </summary>
        </member>
        <member name="M:MGS.UCommon.Curve.SinArgs.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Constructor.
            </summary>
            <param name="amplitude">Amplitude of sin.</param>
            <param name="angular">Angular of sin.</param>
            <param name="phase">Initial phase of sin.</param>
            <param name="setover">Setover of sin.</param>
        </member>
        <member name="T:MGS.UCommon.Curve.SinCurve">
            <summary>
             Sin curve.
            </summary>
        </member>
        <member name="F:MGS.UCommon.Curve.SinCurve.Coefficient">
            <summary>
            Coefficient of delta to lerp key.
            </summary>
        </member>
        <member name="F:MGS.UCommon.Curve.SinCurve.args">
            <summary>
            Args of sin curve.
            </summary>
        </member>
        <member name="P:MGS.UCommon.Curve.SinCurve.Length">
            <summary>
            Length of sin curve.
            </summary>
        </member>
        <member name="P:MGS.UCommon.Curve.SinCurve.MaxKey">
            <summary>
            Max key of sin curve.
            </summary>
        </member>
        <member name="M:MGS.UCommon.Curve.SinCurve.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:MGS.UCommon.Curve.SinCurve.#ctor(MGS.UCommon.Curve.SinArgs)">
            <summary>
            Constructor.
            </summary>
            <param name="args">Args of sin curve.</param>
        </member>
        <member name="M:MGS.UCommon.Curve.SinCurve.GetPointAt(System.Single)">
            <summary>
            Get point on sin curve at x.
            </summary>
            <param name="x">Value of x axis.</param>
            <returns>The point on sin curve at x.</returns>
        </member>
        <member name="M:MGS.UCommon.Curve.SinCurve.Evaluate(MGS.UCommon.Curve.SinArgs,System.Double)">
            <summary>
            Evaluate the value of sin curve at x.
            </summary>
            <param name="args">Args of sin curve.</param>
            <param name="x">Value of x axis.</param>
            <returns>The value of sin curve at x.</returns>
        </member>
        <member name="M:MGS.UCommon.Curve.SinCurve.GetPointAt(MGS.UCommon.Curve.SinArgs,System.Single)">
            <summary>
            Get point on sin curve at x.
            </summary>
            <param name="args">Args of sin curve.</param>
            <param name="x">Value of x axis.</param>
            <returns>The point on sin curve at x.</returns>
        </member>
        <member name="T:MGS.UCommon.Curve.ICurve">
            <summary>
            Interface of curve.
            </summary>
        </member>
        <member name="P:MGS.UCommon.Curve.ICurve.Length">
            <summary>
            Length of curve.
            </summary>
        </member>
        <member name="P:MGS.UCommon.Curve.ICurve.MaxKey">
            <summary>
            Max key of curve.
            </summary>
        </member>
        <member name="M:MGS.UCommon.Curve.ICurve.GetPointAt(System.Single)">
            <summary>
            Get point on curve at key.
            </summary>
            <param name="key">Key of curve.</param>
            <returns>The point on curve at key.</returns>
        </member>
        <member name="T:MGS.UCommon.DesignPattern.SingleBehaviour">
            <summary>
            MonoBehaviour with a single instance.
            </summary>
        </member>
        <member name="M:MGS.UCommon.DesignPattern.SingleBehaviour.SingleAwake">
            <summary>
            SingleBehaviour awake.
            </summary>
        </member>
        <member name="T:MGS.UCommon.DesignPattern.SingleMonoBehaviour`1">
            <summary>
            MonoBehaviour with a single instance.
            </summary>
            <typeparam name="T">Specified type.</typeparam>
        </member>
        <member name="F:MGS.UCommon.DesignPattern.SingleMonoBehaviour`1.SyncRoot">
            <summary>
            Sync root of single behaviour.
            </summary>
        </member>
        <member name="P:MGS.UCommon.DesignPattern.SingleMonoBehaviour`1.Instance">
            <summary>
            Instance of this MonoBehaviour.
            </summary>
        </member>
        <member name="F:MGS.UCommon.DesignPattern.SingleMonoBehaviour`1.instance">
            <summary>
            Instance of this MonoBehaviour.
            </summary>
        </member>
        <member name="M:MGS.UCommon.DesignPattern.SingleMonoBehaviour`1.Awake">
            <summary>
            Component awake.
            </summary>
        </member>
        <member name="M:MGS.UCommon.DesignPattern.SingleMonoBehaviour`1.SingleAwake">
            <summary>
            SingleMonoBehaviour awake.
            </summary>
        </member>
        <member name="T:MGS.UCommon.Skin.ISkin">
            <summary>
            Interface of skinned mesh.
            </summary>
        </member>
        <member name="P:MGS.UCommon.Skin.ISkin.Renderer">
            <summary>
            Skinned mesh renderer of skin.
            </summary>
        </member>
        <member name="P:MGS.UCommon.Skin.ISkin.Collider">
            <summary>
            Mesh collider of skin.
            </summary>
        </member>
        <member name="M:MGS.UCommon.Skin.ISkin.Rebuild">
            <summary>
            Rebuild the mesh of skin.
            </summary>
        </member>
        <member name="M:MGS.UCommon.Skin.ISkin.AttachCollider">
            <summary>
            Attach collider to skin mesh.
            </summary>
        </member>
        <member name="M:MGS.UCommon.Skin.ISkin.RemoveCollider">
            <summary>
            Remove collider from skin mesh.
            </summary>
        </member>
        <member name="T:MGS.UCommon.Skin.MonoSkin">
            <summary>
            Render dynamic skinned mesh.
            </summary>
        </member>
        <member name="F:MGS.UCommon.Skin.MonoSkin.meshRenderer">
            <summary>
            Skinned mesh renderer of skin.
            </summary>
        </member>
        <member name="F:MGS.UCommon.Skin.MonoSkin.meshCollider">
            <summary>
            Mesh collider of skin.
            </summary>
        </member>
        <member name="F:MGS.UCommon.Skin.MonoSkin.mesh">
            <summary>
            Mesh of skin.
            </summary>
        </member>
        <member name="P:MGS.UCommon.Skin.MonoSkin.Renderer">
            <summary>
            Skinned mesh renderer of skin.
            </summary>
        </member>
        <member name="P:MGS.UCommon.Skin.MonoSkin.Collider">
            <summary>
            Mesh collider of skin.
            </summary>
        </member>
        <member name="M:MGS.UCommon.Skin.MonoSkin.Reset">
            <summary>
            Reset component.
            </summary>
        </member>
        <member name="M:MGS.UCommon.Skin.MonoSkin.Awake">
            <summary>
            Awake component.
            </summary>
        </member>
        <member name="M:MGS.UCommon.Skin.MonoSkin.RebuildMesh(UnityEngine.Mesh)">
            <summary>
            Rebuild the mesh of skin.
            </summary>
            <param name="mesh">Mesh of skin.</param>
        </member>
        <member name="M:MGS.UCommon.Skin.MonoSkin.Initialize">
            <summary>
            Initialize mono skin.
            </summary>
        </member>
        <member name="M:MGS.UCommon.Skin.MonoSkin.Rebuild">
            <summary>
            Rebuild the mesh of skin.
            </summary>
        </member>
        <member name="M:MGS.UCommon.Skin.MonoSkin.AttachCollider">
            <summary>
            Attach MeshCollider to skin.
            </summary>
        </member>
        <member name="M:MGS.UCommon.Skin.MonoSkin.RemoveCollider">
            <summary>
            Remove MeshCollider from skin.
            </summary>
        </member>
        <member name="T:MGS.UCommon.Utility.MeshUtility">
            <summary>
            Utility for mesh.
            </summary>
        </member>
        <member name="M:MGS.UCommon.Utility.MeshUtility.CreateVerticesBasePolygon(System.Int32,System.Single,UnityEngine.Vector3,UnityEngine.Quaternion)">
            <summary>
            Create vertices base on polygon.
            </summary>
            <param name="edge">Edge count of polygon.</param>
            <param name="radius">Radius of polygon.</param>
            <param name="center">Center of polygon.</param>
            <param name="rotation">Rotation of polygon.</param>
            <returns>Vertices base on polygon.</returns>
        </member>
        <member name="M:MGS.UCommon.Utility.MeshUtility.CreateTrianglesBasePolygon(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Create triangles index base on polygon and center vertice.
            </summary>
            <param name="edge">Edge count of polygon.</param>
            <param name="center">Index of center vertice.</param>
            <param name="start">Index of start vertice.</param>
            <param name="clockwise">Triangle indexs is clockwise.</param>
            <returns>Triangles base on polygon.</returns>
        </member>
        <member name="M:MGS.UCommon.Utility.MeshUtility.CreateTrianglesBasePrism(System.Int32,System.Int32,System.Int32)">
            <summary>
            Create triangles index base on prism.
            </summary>
            <param name="polygon">Edge count of prism polygon.</param>
            <param name="segment">Segment count of prism vertices vertical division.</param>
            <param name="start">Start index of prism vertice.</param>
            <returns>Triangles index base on prism.</returns>
        </member>
        <member name="M:MGS.UCommon.Utility.MeshUtility.CreateUVBasePolygon(System.Int32)">
            <summary>
            Create uv base on polygon.
            </summary>
            <param name="edge">Edge count of polygon.</param>
            <returns>UV base on polygon.</returns>
        </member>
        <member name="M:MGS.UCommon.Utility.MeshUtility.CreateUVBasePrism(System.Int32,System.Int32)">
            <summary>
            Create uv base on prism.
            </summary>
            <param name="polygon">Edge count of prism polygon.</param>
            <param name="segment">Segment count of prism vertices vertical division.</param>
            <returns>UV base on prism.</returns>
        </member>
        <member name="T:MGS.UCommon.Utility.RectUtility">
            <summary>
            Utility for RectTransform.
            </summary>
        </member>
        <member name="M:MGS.UCommon.Utility.RectUtility.Mirror(UnityEngine.RectTransform,MGS.UCommon.Generic.MirrorMode)">
            <summary>
            Mirror RectTransform.
            </summary>
            <param name="rect">Target RectTransform.</param>
            <param name="mode">Mode of mirror.</param>
        </member>
        <member name="T:MGS.UCommon.Utility.VectorUtility">
            <summary>
            Utility for unity vector.
            </summary>
        </member>
        <member name="M:MGS.UCommon.Utility.VectorUtility.ProjectAngle(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3)">
            <summary>
            Calculate project angle of two vectors in the range(0~360).
            </summary>
            <param name="from">Start vector.</param>
            <param name="to">End vector.</param>
            <param name="normal">Normal of plane to project.</param>
            <returns>Project angle of two vectors.</returns>
        </member>
        <member name="T:MGS.Common.Utility.MultilingualUtility">
            <summary>
            Utility for multilingualism.
            </summary>
        </member>
        <member name="F:MGS.Common.Utility.MultilingualUtility.SEPARATOR">
            <summary>
            Separator of paragraph key and value.
            </summary>
        </member>
        <member name="P:MGS.Common.Utility.MultilingualUtility.Current">
            <summary>
            Current language.
            </summary>
        </member>
        <member name="F:MGS.Common.Utility.MultilingualUtility.languages">
            <summary>
            Languages content list.
            </summary>
        </member>
        <member name="F:MGS.Common.Utility.MultilingualUtility.directory">
            <summary>
            The directory of multilingualism files.
            </summary>
        </member>
        <member name="M:MGS.Common.Utility.MultilingualUtility.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:MGS.Common.Utility.MultilingualUtility.Initialize(System.String)">
            <summary>
            Initialize the directory of multilingualism files.
            </summary>
            <param name="directory">The directory of multilingualism files.</param>
        </member>
        <member name="M:MGS.Common.Utility.MultilingualUtility.SetLanguage(System.String)">
            <summary>
            Set language by name.
            </summary>
            <param name="name">Name of language (Config in the LanguageSettings).</param>
            <returns>Set language succeed?</returns>
        </member>
        <member name="M:MGS.Common.Utility.MultilingualUtility.GetParagraph(System.String)">
            <summary>
            Get a paragraph text of key in language.
            </summary>
            <param name="key">Key of paragraph text.</param>
            <returns>A paragraph text of key in language.</returns>
        </member>
    </members>
</doc>
